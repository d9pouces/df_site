[tox]
envlist = py312
minversion = 3.4.0
requires = tox-docker

[docker:postgres]
environment =
    POSTGRES_DB=d_modersite
    POSTGRES_PASSWORD=p_modersite
    POSTGRES_USER=u_modersite
healthcheck_cmd = pg_isready -U u_modersite -d d_modersite
healthcheck_interval = 10
healthcheck_timeout = 5
healthcheck_retries = 10
healthcheck_start_period = 1
image = postgres:alpine

[docker:minio]
environment =
    MINIO_ROOT_USER=u_modersite
    MINIO_ROOT_PASSWORD=p_modersite
healthcheck_cmd = mc ready local
healthcheck_interval = 10
healthcheck_timeout = 5
healthcheck_retries = 10
healthcheck_start_period = 1
image = bitnami/minio:latest

[docker:redis]
environment =
    REDIS_PASSWORD=p_modersite
healthcheck_cmd = redis-cli ping
healthcheck_interval = 10
healthcheck_timeout = 5
healthcheck_retries = 10
healthcheck_start_period = 1
image = redis:alpine

[testenv:py312]
commands =
    python3 -m modersite collectstatic --noinput
    python3 -m modersite migrate
    python3 -m modersite test -v 1 modersite_tests
    python3 -m coverage run -a --concurrency=greenlet,thread --source='modersite,modersite_tests' -m modersite test modersite_tests
    python3 -m coverage xml -o build/coverage.xml
    python3 -m coverage report -m
    python3 -m poetry build
    python3 -m sphinx -E doc/source dist/html
setenv =
    DATABASE_URL=postgresql://u_modersite:p_modersite@{env:POSTGRES_HOST}:{env:POSTGRES_5432_TCP_PORT}/d_modersite
    DATA_ROOT=.tox/data
    UPLOAD_DIRECTORY=s3:http://u_modersite:p_modersite@{env:MINIO_HOST}:{env:MINIO_9000_TCP_PORT}/f_modersite
    REDIS_URL=redis://:p_modersite@{env:REDIS_HOST}:{env:REDIS_6379_TCP_PORT}/1
    PYTHON_UNITTEST=1
    PYTHONDEVMODE=1
    PYTHONHASHSEED=28739944
    OBJC_DISABLE_INITIALIZE_FORK_SAFETY=yes
deps =
    recommonmark
    sphinx
    sphinx-immaterial
    poetry
    coverage
    hypothesis
docker =
    postgres
    redis
    minio
